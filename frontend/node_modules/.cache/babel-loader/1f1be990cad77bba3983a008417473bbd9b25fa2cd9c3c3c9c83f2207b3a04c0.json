{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caiot\\\\Desktop\\\\reels-to-mp4\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadButton = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleDownload = async () => {\n    if (!url) {\n      setError('Por favor, insira uma URL do Instagram.');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/api/download', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        window.open(data.downloadUrl, '_blank'); // Abre o link em nova aba\n      } else {\n        setError(data.error || 'Erro ao baixar o vídeo.');\n      }\n    } catch (err) {\n      setError('Falha na conexão. Tente novamente.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: url,\n      onChange: e => setUrl(e.target.value),\n      placeholder: \"Cole a URL do Instagram Reel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      disabled: isLoading,\n      children: isLoading ? 'Baixando...' : 'Baixar Vídeo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(DownloadButton, \"HbKnjhmOKeOGRqdzxZt5zmmLZf8=\");\n_c = DownloadButton;\nexport default DownloadButton;\nvar _c;\n$RefreshReg$(_c, \"DownloadButton\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","DownloadButton","_s","url","setUrl","error","setError","isLoading","setIsLoading","handleDownload","response","fetch","method","headers","body","JSON","stringify","data","json","ok","window","open","downloadUrl","err","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/caiot/Desktop/reels-to-mp4/frontend/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nconst DownloadButton = () => {\n  const [url, setUrl] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleDownload = async () => {\n    if (!url) {\n      setError('Por favor, insira uma URL do Instagram.');\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch('/api/download', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        window.open(data.downloadUrl, '_blank'); // Abre o link em nova aba\n      } else {\n        setError(data.error || 'Erro ao baixar o vídeo.');\n      }\n    } catch (err) {\n      setError('Falha na conexão. Tente novamente.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={url}\n        onChange={(e) => setUrl(e.target.value)}\n        placeholder=\"Cole a URL do Instagram Reel\"\n      />\n      <button onClick={handleDownload} disabled={isLoading}>\n        {isLoading ? 'Baixando...' : 'Baixar Vídeo'}\n      </button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default DownloadButton;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACN,GAAG,EAAE;MACRG,QAAQ,CAAC,yCAAyC,CAAC;MACnD;IACF;IAEAE,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb;QAAI,CAAC;MAC9B,CAAC,CAAC;MAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAACK,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;MAC3C,CAAC,MAAM;QACLhB,QAAQ,CAACW,IAAI,CAACZ,KAAK,IAAI,yBAAyB,CAAC;MACnD;IACF,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZjB,QAAQ,CAAC,oCAAoC,CAAC;IAChD,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACER,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEvB,GAAI;MACXwB,QAAQ,EAAGC,CAAC,IAAKxB,MAAM,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCI,WAAW,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFlC,OAAA;MAAQmC,OAAO,EAAE1B,cAAe;MAAC2B,QAAQ,EAAE7B,SAAU;MAAAiB,QAAA,EAClDjB,SAAS,GAAG,aAAa,GAAG;IAAc;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACR7B,KAAK,iBAAIL,OAAA;MAAGqC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAd,QAAA,EAAEnB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAChC,EAAA,CAnDID,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}